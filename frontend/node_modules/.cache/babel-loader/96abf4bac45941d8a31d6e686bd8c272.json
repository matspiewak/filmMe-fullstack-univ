{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Studia-Projekty\\\\GH\\\\filmMe-fullstack-univ\\\\frontend\\\\src\\\\apis\\\\signIn.js\";\nimport React from \"react\";\nimport Cookies from \"js-cookie\";\nCookies.set('test', '123');\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: null,\n      jwt: null\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"/signin\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: \"test2@gmail.com\",\n        password: \"zaq1@WSX\"\n      }),\n      headers: {\n        \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        jwt: Cookies.get('jwt'),\n        result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      result,\n      jwt\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 14\n      }, this);\n    } else {\n      Cookies.set('test2', '12345');\n      var a = Cookies.get('jwt');\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: a\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["E:/Studia-Projekty/GH/filmMe-fullstack-univ/frontend/src/apis/signIn.js"],"names":["React","Cookies","set","SignIn","Component","constructor","props","state","error","isLoaded","jwt","componentDidMount","fetch","method","body","JSON","stringify","email","password","headers","then","res","json","result","setState","get","render","message","a"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmB,KAAnB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,IAFC;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,SAAD,EAAY;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,KAAK,EAAE,iBADY;AAEnBC,QAAAA,QAAQ,EAAE;AAFS,OAAf,CAFS;AAMfC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AANM,KAAZ,CAAL,CAUGC,IAVH,CAUSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAVjB,EAWGF,IAXH,CAYKG,MAAD,IAAY;AACV,WAAKC,QAAL,CAAc;AACZf,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,GAAG,EAAET,OAAO,CAACwB,GAAR,CAAY,KAAZ,CAFO;AAGZF,QAAAA;AAHY,OAAd;AAKD,KAlBL,EAmBKf,KAAD,IAAW;AACT,WAAKgB,QAAL,CAAc;AACZf,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAxBL;AA0BD;;AACDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAElB,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBc,MAAAA,MAAnB;AAA2Bb,MAAAA;AAA3B,QAAmC,KAAKH,KAA9C;;AAEA,QAAIC,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACmB,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAAClB,QAAL,EAAe;AACpB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACHR,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoB,OAApB;AACA,UAAI0B,CAAC,GAAG3B,OAAO,CAACwB,GAAR,CAAY,KAAZ,CAAR;AACF,0BAAO;AAAA,kBAAMG;AAAN;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AACF;;AAjDkC;;AAoDrC,eAAezB,MAAf","sourcesContent":["import React from \"react\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nCookies.set('test','123')\r\n\r\nclass SignIn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: null,\r\n      jwt: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"/signin\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        email: \"test2@gmail.com\",\r\n        password: \"zaq1@WSX\",\r\n      }),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\",\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            jwt: Cookies.get('jwt'),\r\n            result,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  }\r\n  render() {\r\n    const { error, isLoaded, result, jwt } = this.state;\r\n    \r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n        Cookies.set('test2','12345')\r\n        var a = Cookies.get('jwt');\r\n      return <div>{a}</div>;\r\n    }\r\n  }\r\n}\r\n\r\nexport default SignIn;\r\n"]},"metadata":{},"sourceType":"module"}