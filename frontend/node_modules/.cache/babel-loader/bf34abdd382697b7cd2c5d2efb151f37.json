{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Studia-Projekty\\\\GH\\\\filmMe-fullstack-univ\\\\frontend\\\\src\\\\apis\\\\movieDetail.js\";\nimport React from \"react\";\nimport MovieModal from '../modals/movieModal';\n\nclass Movies extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch(\"/movies/6014529ed9d73320604ed922\").then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          movies: result.info\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.handleAdd = () => {\n      this.setState({\n        isModalOpen: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        isModalOpen: false\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      movies: [],\n      isModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      movies\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-load\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.handleAdd,\n            className: \"btn btn-primary\",\n            children: \"Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(MovieModal, {\n            isOpen: this.state.isModalOpen,\n            isClose: this.handleClose\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["E:/Studia-Projekty/GH/filmMe-fullstack-univ/frontend/src/apis/movieDetail.js"],"names":["React","MovieModal","Movies","Component","constructor","props","componentDidMount","fetch","then","res","json","result","setState","isLoaded","movies","info","error","handleAdd","isModalOpen","handleClose","state","render","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;;AACA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAWnBC,iBAXmB,GAWC,MAAM;AACxBC,MAAAA,KAAK,CAAC,kCAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,aAAKC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,MAAM,EAAEH,MAAM,CAACI;AAFH,SAAd;AAID,OARL,EASKC,KAAD,IAAW;AACT,aAAKJ,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZG,UAAAA;AAFY,SAAd;AAID,OAdL;AAgBD,KA5BkB;;AAAA,SA8BnBC,SA9BmB,GA8BP,MAAM;AAChB,WAAKL,QAAL,CAAc;AAACM,QAAAA,WAAW,EAAE;AAAd,OAAd;AACD,KAhCkB;;AAAA,SAkCnBC,WAlCmB,GAkCL,MAAM;AAClB,WAAKP,QAAL,CAAc;AAACM,QAAAA,WAAW,EAAE;AAAd,OAAd;AACD,KApCkB;;AAEjB,SAAKE,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,IADI;AAEXH,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXI,MAAAA,WAAW,EAAE;AAJF,KAAb;AAOD;;AA4BDG,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEL,MAAAA,KAAF;AAASH,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA8B,KAAKM,KAAzC;;AACA,QAAIJ,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACM,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACT,QAAL,EAAe;AACpB,0BAAO;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AAEL,0BACE;AAAA,+BACA;AAAA,kCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,OAAO,EAAE,KAAKI,SAApC;AAA+C,YAAA,SAAS,EAAC,iBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,MAAM,EAAE,KAAKG,KAAL,CAAWF,WAA/B;AAA4C,YAAA,OAAO,EAAE,KAAKC;AAA1D;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF;AAQD;AACF;;AAxDkC;;AA2DrC,eAAejB,MAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport MovieModal from '../modals/movieModal';\r\nclass Movies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      movies: [],\r\n      isModalOpen: false,\r\n    };\r\n    \r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch(\"/movies/6014529ed9d73320604ed922\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            movies: result.info,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  handleAdd = () => {\r\n    this.setState({isModalOpen: true});\r\n  }\r\n\r\n  handleClose = () => {\r\n    this.setState({isModalOpen: false});\r\n  }\r\n  render() {\r\n      \r\n    const { error, isLoaded, movies } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div className=\"page-load\">Loading...</div>;\r\n    } else {\r\n        \r\n      return (\r\n        <center>\r\n        <div>\r\n          <button type=\"button\" onClick={this.handleAdd} className=\"btn btn-primary\">Modal</button>\r\n          <MovieModal isOpen={this.state.isModalOpen} isClose={this.handleClose}/>\r\n        </div>\r\n        </center>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}