{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Studia-Projekty\\\\GH\\\\filmMe-fullstack-univ\\\\frontend\\\\src\\\\apis\\\\movieDetail.js\";\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport MovieModal from \"../modals/movieModal\";\n\nclass MovieDetail extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      fetch(`/movies/${this.props.match.params.id}`).then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          movies: result.info\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n      fetch(\"/reviews\").then(res => res.json()).then(result => {\n        this.setState({\n          reviews: result.info\n        });\n      });\n    };\n\n    this.handleAdd = () => {\n      this.setState({\n        isModalOpen: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        isModalOpen: false\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      movies: [],\n      reviews: [],\n      isModalOpen: false\n    };\n    console.log(this.props.match.params.id);\n  }\n\n  render() {\n    const {\n      movies,\n      reviews\n    } = this.state;\n    let url = movies.filmUrl;\n    console.log(url);\n    return /*#__PURE__*/_jsxDEV(\"center\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleAdd,\n          className: \"btn btn-primary\",\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MovieModal, {\n          isOpen: this.state.isModalOpen,\n          isClose: this.handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), reviews.map(item)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MovieDetail;","map":{"version":3,"sources":["E:/Studia-Projekty/GH/filmMe-fullstack-univ/frontend/src/apis/movieDetail.js"],"names":["React","useParams","MovieModal","MovieDetail","Component","constructor","props","componentDidMount","fetch","match","params","id","then","res","json","result","setState","isLoaded","movies","info","error","reviews","handleAdd","isModalOpen","handleClose","state","console","log","render","url","filmUrl","map","item"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,UAAP,MAAuB,sBAAvB;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAYnBC,iBAZmB,GAYC,MAAM;AACxBC,MAAAA,KAAK,CAAE,WAAU,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAAG,EAAvC,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,aAAKC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,MAAM,EAAEH,MAAM,CAACI;AAFH,SAAd;AAID,OARL,EASKC,KAAD,IAAW;AACT,aAAKJ,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZG,UAAAA;AAFY,SAAd;AAID,OAdL;AAgBAZ,MAAAA,KAAK,CAAC,UAAD,CAAL,CACCI,IADD,CACOC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADf,EAECF,IAFD,CAEOG,MAAD,IAAY;AACd,aAAKC,QAAL,CAAc;AACVK,UAAAA,OAAO,EAAEN,MAAM,CAACI;AADN,SAAd;AAGH,OAND;AAOD,KApCkB;;AAAA,SAsCnBG,SAtCmB,GAsCP,MAAM;AAChB,WAAKN,QAAL,CAAc;AAAEO,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAxCkB;;AAAA,SA0CnBC,WA1CmB,GA0CL,MAAM;AAClB,WAAKR,QAAL,CAAc;AAAEO,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KA5CkB;;AAEjB,SAAKE,KAAL,GAAa;AACXL,MAAAA,KAAK,EAAE,IADI;AAEXH,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXG,MAAAA,OAAO,EAAE,EAJE;AAKXE,MAAAA,WAAW,EAAE;AALF,KAAb;AAOAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,EAApC;AACD;;AAmCDiB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA,MAAF;AAASG,MAAAA;AAAT,QAAqB,KAAKI,KAAhC;AAEA,QAAII,GAAG,GAAGX,MAAM,CAACY,OAAjB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACA,wBACE;AAAA,6BACE;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,OAAO,EAAE,KAAKP,SAFhB;AAGE,UAAA,SAAS,EAAC,iBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,UAAD;AACE,UAAA,MAAM,EAAE,KAAKG,KAAL,CAAWF,WADrB;AAEE,UAAA,OAAO,EAAE,KAAKC;AAFhB;AAAA;AAAA;AAAA;AAAA,gBARF,EAYGH,OAAO,CAACU,GAAR,CAAYC,IAAZ,CAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AArEuC;;AAwE1C,eAAe7B,WAAf","sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport MovieModal from \"../modals/movieModal\";\r\n\r\nclass MovieDetail extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      movies: [],\r\n      reviews: [],\r\n      isModalOpen: false,\r\n    };\r\n    console.log(this.props.match.params.id);\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    fetch(`/movies/${this.props.match.params.id}`)\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            movies: result.info,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n    fetch(\"/reviews\")\r\n    .then((res) => res.json())\r\n    .then((result) => {\r\n        this.setState({\r\n            reviews: result.info\r\n        })\r\n    })\r\n  };\r\n\r\n  handleAdd = () => {\r\n    this.setState({ isModalOpen: true });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ isModalOpen: false });\r\n  };\r\n  render() {\r\n    const { movies,reviews } = this.state;\r\n\r\n    let url = movies.filmUrl;\r\n    console.log(url);\r\n    return (\r\n      <center>\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            onClick={this.handleAdd}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Modal\r\n          </button>\r\n          <MovieModal\r\n            isOpen={this.state.isModalOpen}\r\n            isClose={this.handleClose}\r\n          />\r\n          {reviews.map(item)}\r\n        </div>\r\n      </center>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieDetail;\r\n"]},"metadata":{},"sourceType":"module"}