{"ast":null,"code":"import Cookies from 'js-cookie';\n\nfunction signIn(email, password) {\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  };\n  return fetch('/signin', requestOptions).then(handleResponse).then(user => {\n    Cookies.get('jwt');\n    return user;\n  });\n}\n\nfunction signOut() {\n  Cookies.remove('jwt');\n}\n\nfunction handleResponse(response) {\n  return response.text(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status == 401) {\n        signOut();\n        location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n\nexport const userService = {\n  signIn,\n  signOut\n};","map":{"version":3,"sources":["E:/Studia-Projekty/GH/filmMe-fullstack-univ/frontend/src/services/UserService.js"],"names":["Cookies","signIn","email","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","user","get","signOut","remove","response","text","data","parse","ok","status","location","reload","error","message","statusText","Promise","reject","userService"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuBC,QAAvB,EAAiC;AAC7B,QAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAC,sBAAgB;AAAjB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACP,MAAAA,KAAD;AAAOC,MAAAA;AAAP,KAAf;AAHa,GAAvB;AAMA,SAAOO,KAAK,CAAC,SAAD,EAAYN,cAAZ,CAAL,CACNO,IADM,CACDC,cADC,EAEND,IAFM,CAEDE,IAAI,IAAI;AAEVb,IAAAA,OAAO,CAACc,GAAR,CAAY,KAAZ;AACA,WAAOD,IAAP;AACH,GANM,CAAP;AAOH;;AAED,SAASE,OAAT,GAAmB;AACff,EAAAA,OAAO,CAACgB,MAAR,CAAe,KAAf;AACH;;AAED,SAASJ,cAAT,CAAwBK,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,CAAcA,IAAI,IAAI;AACzB,UAAMC,IAAI,GAAGD,IAAI,IAAIV,IAAI,CAACY,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAG,CAACD,QAAQ,CAACI,EAAb,EAAgB;AACZ,UAAGJ,QAAQ,CAACK,MAAT,IAAmB,GAAtB,EAA0B;AACtBP,QAAAA,OAAO;AACPQ,QAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACH;;AACD,YAAMC,KAAK,GAAIN,IAAI,IAAIA,IAAI,CAACO,OAAd,IAA0BT,QAAQ,CAACU,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,WAAON,IAAP;AACH,GAXM,CAAP;AAYH;;AAED,OAAO,MAAMW,WAAW,GAAG;AACvB7B,EAAAA,MADuB;AAEvBc,EAAAA;AAFuB,CAApB","sourcesContent":["import Cookies from 'js-cookie';\r\n\r\nfunction signIn(email, password) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({email,password})\r\n    };\r\n\r\n    return fetch('/signin', requestOptions)\r\n    .then(handleResponse)\r\n    .then(user => {\r\n\r\n        Cookies.get('jwt');\r\n        return user;\r\n    });\r\n}\r\n\r\nfunction signOut() {\r\n    Cookies.remove('jwt');\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text(text => {\r\n        const data = text && JSON.parse(text);\r\n        if(!response.ok){\r\n            if(response.status == 401){\r\n                signOut();\r\n                location.reload(true);\r\n            }\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\nexport const userService = {\r\n    signIn,\r\n    signOut\r\n};"]},"metadata":{},"sourceType":"module"}