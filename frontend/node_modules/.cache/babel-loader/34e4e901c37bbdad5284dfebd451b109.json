{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Studia-Projekty\\\\GH\\\\filmMe-fullstack-univ\\\\frontend\\\\src\\\\apis\\\\movies.js\";\nimport React from \"react\";\nimport MovieModal from '../modals/movieModal';\n\nclass Movies extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      fetch(\"/movies\").then(res => res.json()).then(result => {\n        this.setState({\n          isLoaded: true,\n          movies: result.info\n        });\n      }, error => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      });\n    };\n\n    this.handleAdd = () => {\n      this.setState({\n        isModalOpen: true\n      });\n    };\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      movies: [],\n      isModalOpen: false\n    };\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      movies\n    } = this.state;\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-load\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: movies.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.title, \" \", item.author]\n          }, item._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.handleAdd,\n          className: \"btn btn-primary\",\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Movi, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["E:/Studia-Projekty/GH/filmMe-fullstack-univ/frontend/src/apis/movies.js"],"names":["React","MovieModal","Movies","Component","constructor","props","componentDidMount","fetch","then","res","json","result","setState","isLoaded","movies","info","error","handleAdd","isModalOpen","state","render","message","map","item","title","author","_id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,sBAAvB;;AACA,MAAMC,MAAN,SAAqBF,KAAK,CAACG,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBC,iBAVmB,GAUC,YAAY;AAC9BC,MAAAA,KAAK,CAAC,SAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACV,aAAKC,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,MAAM,EAAEH,MAAM,CAACI;AAFH,SAAd;AAID,OARL,EASKC,KAAD,IAAW;AACT,aAAKJ,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,IADE;AAEZG,UAAAA;AAFY,SAAd;AAID,OAdL;AAgBD,KA3BkB;;AAAA,SA6BnBC,SA7BmB,GA6BP,MAAM;AAChB,WAAKL,QAAL,CAAc;AAACM,QAAAA,WAAW,EAAE;AAAd,OAAd;AACD,KA/BkB;;AAEjB,SAAKC,KAAL,GAAa;AACXH,MAAAA,KAAK,EAAE,IADI;AAEXH,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,MAAM,EAAE,EAHG;AAIXI,MAAAA,WAAW,EAAE;AAJF,KAAb;AAMD;;AAyBDE,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEJ,MAAAA,KAAF;AAASH,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA8B,KAAKK,KAAzC;;AACA,QAAIH,KAAJ,EAAW;AACT,0BAAO;AAAA,8BAAaA,KAAK,CAACK,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFD,MAEO,IAAI,CAACR,QAAL,EAAe;AACpB,0BAAO;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFM,MAEA;AACL,0BACE;AAAA,gCACE;AAAA,oBACGC,MAAM,CAACQ,GAAP,CAAYC,IAAD,iBACV;AAAA,uBACGA,IAAI,CAACC,KADR,OACgBD,IAAI,CAACE,MADrB;AAAA,aAASF,IAAI,CAACG,GAAd;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAE,KAAKT,SAApC;AAA+C,UAAA,SAAS,EAAC,iBAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAaD;AACF;;AAxDkC;;AA2DrC,eAAef,MAAf","sourcesContent":["import React from \"react\";\r\n\r\nimport MovieModal from '../modals/movieModal';\r\nclass Movies extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      movies: [],\r\n      isModalOpen: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    fetch(\"/movies\")\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            movies: result.info,\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      );\r\n  };\r\n\r\n  handleAdd = () => {\r\n    this.setState({isModalOpen: true});\r\n  }\r\n\r\n  render() {\r\n\r\n    const { error, isLoaded, movies } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div className=\"page-load\">Loading...</div>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <ul>\r\n            {movies.map((item) => (\r\n              <li key={item._id}>\r\n                {item.title} {item.author}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <button type=\"button\" onClick={this.handleAdd} className=\"btn btn-primary\">Modal</button>\r\n          <Movi />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n"]},"metadata":{},"sourceType":"module"}