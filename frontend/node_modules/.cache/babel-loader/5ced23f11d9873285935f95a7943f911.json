{"ast":null,"code":"let signIn = (email, password) => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  };\n  return fetch(\"/signin\", requestOptions).then(handleResponse).then(user => {\n    return user;\n  });\n};\n\nlet signUp = (email, password) => {};\n\nlet handleResponse = response => {\n  return response.text(text => {\n    const data = text && JSON.parse(text);\n    return data;\n  });\n};\n\nexport const signInService = {\n  signIn\n};\nexport const signUpService = {\n  signUp\n};","map":{"version":3,"sources":["E:/Studia-Projekty/GH/filmMe-fullstack-univ/frontend/src/services/AuthService.js"],"names":["signIn","email","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","user","signUp","response","text","data","parse","signInService","signUpService"],"mappings":"AAAA,IAAIA,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAChC,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAf;AAHe,GAAvB;AAMA,SAAOO,KAAK,CAAC,SAAD,EAAYN,cAAZ,CAAL,CACJO,IADI,CACCC,cADD,EAEJD,IAFI,CAEEE,IAAD,IAAU;AACd,WAAOA,IAAP;AACD,GAJI,CAAP;AAKD,CAZD;;AAcA,IAAIC,MAAM,GAAG,CAACZ,KAAD,EAAQC,QAAR,KAAqB,CAEjC,CAFD;;AAIA,IAAIS,cAAc,GAAIG,QAAD,IAAc;AACjC,SAAOA,QAAQ,CAACC,IAAT,CAAeA,IAAD,IAAU;AAC7B,UAAMC,IAAI,GAAGD,IAAI,IAAIR,IAAI,CAACU,KAAL,CAAWF,IAAX,CAArB;AACA,WAAOC,IAAP;AACD,GAHM,CAAP;AAID,CALD;;AAOA,OAAO,MAAME,aAAa,GAAG;AAC3BlB,EAAAA;AAD2B,CAAtB;AAIP,OAAO,MAAMmB,aAAa,GAAG;AACzBN,EAAAA;AADyB,CAAtB","sourcesContent":["let signIn = (email, password) => {\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ email, password }),\r\n  };\r\n\r\n  return fetch(\"/signin\", requestOptions)\r\n    .then(handleResponse)\r\n    .then((user) => {\r\n      return user;\r\n    });\r\n};\r\n\r\nlet signUp = (email, password) => {\r\n\r\n};\r\n\r\nlet handleResponse = (response) => {\r\n  return response.text((text) => {\r\n    const data = text && JSON.parse(text);\r\n    return data;\r\n  });\r\n};\r\n\r\nexport const signInService = {\r\n  signIn\r\n};\r\n\r\nexport const signUpService = {\r\n    signUp\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}